"""voici un code qui inverse le processu d'necoage et donne la flag

flag : Exploit3rs{c0ngr4ts_0n_y0ur_fr33_vbuCK5}
"""

from PIL import Image

def extraire_flag_image(image_path, stripe_width=16, stripe_height=128):
    image = Image.open(image_path)
    largeur, hauteur = image.size
    nb_bits = largeur // stripe_width
    bits = []

    for i in range(nb_bits):
        x = i * stripe_width + stripe_width // 2  # position centrale de la bande
        y = stripe_height // 2  # prendre un point vertical au milieu
        pixel = image.getpixel((x, y))
        # Noir = (0,0,0), Blanc = (255,255,255)
        bit = 1 if pixel == (0, 0, 0) else 0
        bits.append(bit)

    # Regrouper les bits en octets (8 bits → 1 caractère)
    chars = []
    for i in range(0, len(bits), 8):
        byte = bits[i:i+8]
        if len(byte) < 8:
            break
        ascii_code = int(''.join(map(str, byte)), 2)
        chars.append(chr(ascii_code))

    return ''.join(chars)

# Exemple d'utilisation :
flag = extraire_flag_image("code.png")
print("FLAG :", flag)
